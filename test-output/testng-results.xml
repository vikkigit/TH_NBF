<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="4" ignored="3" total="11" passed="4">
  <reporter-output>
    <line>
      <![CDATA[captureScreen method called]]>
    </line>
    <line>
      <![CDATA[<a href='C:\Users\THI1806393\eclipse-workspace\TH_NBF\src\main\resources\screenShots\testLogin1_11_09_2018_05_32_39.png'><img src='C:\Users\THI1806393\eclipse-workspace\TH_NBF\src\main\resources\screenShots\testLogin1_11_09_2018_05_32_39.png'height='100' width='100'/></a>]]>
    </line>
    <line>
      <![CDATA[captureScreen method called]]>
    </line>
    <line>
      <![CDATA[<a href='C:\Users\THI1806393\eclipse-workspace\TH_NBF\src\main\resources\screenShots\testLogin3_11_09_2018_05_32_39.png'><img src='C:\Users\THI1806393\eclipse-workspace\TH_NBF\src\main\resources\screenShots\testLogin3_11_09_2018_05_32_39.png'height='100' width='100'/></a>]]>
    </line>
  </reporter-output>
  <suite name="Suite" duration-ms="8154" started-at="2018-09-11T12:02:32Z" finished-at="2018-09-11T12:02:40Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="8154" started-at="2018-09-11T12:02:32Z" finished-at="2018-09-11T12:02:40Z">
      <class name="com.uiFramework.TH.Nbf.testScripts.Test1">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:com.uiFramework.TH.Nbf.testScripts.Test1@5ae63ade]" name="beforeSuite" is-config="true" duration-ms="106" started-at="2018-09-11T12:02:32Z" finished-at="2018-09-11T12:02:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.uiFramework.TH.Nbf.testScripts.Test1@5ae63ade]" name="beforeTest" is-config="true" duration-ms="6566" started-at="2018-09-11T12:02:32Z" finished-at="2018-09-11T12:02:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.uiFramework.TH.Nbf.testScripts.Test1@5ae63ade]" name="beforeMethod" is-config="true" duration-ms="8" started-at="2018-09-11T12:02:39Z" finished-at="2018-09-11T12:02:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.uiFramework.TH.Nbf.testScripts.Test1.testLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testLogin()[pri:0, instance:com.uiFramework.TH.Nbf.testScripts.Test1@5ae63ade]" name="testLogin" duration-ms="10" started-at="2018-09-11T12:02:39Z" finished-at="2018-09-11T12:02:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.uiFramework.TH.Nbf.testScripts.Test1@5ae63ade]" name="afterMethod" is-config="true" duration-ms="184" started-at="2018-09-11T12:02:39Z" finished-at="2018-09-11T12:02:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin status=SUCCESS method=Test1.testLogin()[pri:0, instance:com.uiFramework.TH.Nbf.testScripts.Test1@5ae63ade] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.uiFramework.TH.Nbf.testScripts.Test1@5ae63ade]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-09-11T12:02:39Z" finished-at="2018-09-11T12:02:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.uiFramework.TH.Nbf.testScripts.Test1.testLogin1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="testLogin1()[pri:0, instance:com.uiFramework.TH.Nbf.testScripts.Test1@5ae63ade]" name="testLogin1" duration-ms="3" started-at="2018-09-11T12:02:39Z" finished-at="2018-09-11T12:02:39Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.uiFramework.TH.Nbf.helper.assertion.AssertionHelper.markFail(AssertionHelper.java:28)
at com.uiFramework.TH.Nbf.testScripts.Test1.testLogin1(Test1.java:18)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin1 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.uiFramework.TH.Nbf.testScripts.Test1@5ae63ade]" name="afterMethod" is-config="true" duration-ms="295" started-at="2018-09-11T12:02:39Z" finished-at="2018-09-11T12:02:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin1 status=FAILURE method=Test1.testLogin1()[pri:0, instance:com.uiFramework.TH.Nbf.testScripts.Test1@5ae63ade] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[captureScreen method called]]>
            </line>
            <line>
              <![CDATA[<a href='C:\Users\THI1806393\eclipse-workspace\TH_NBF\src\main\resources\screenShots\testLogin1_11_09_2018_05_32_39.png'><img src='C:\Users\THI1806393\eclipse-workspace\TH_NBF\src\main\resources\screenShots\testLogin1_11_09_2018_05_32_39.png'height='100' width='100'/></a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.uiFramework.TH.Nbf.testScripts.Test1@5ae63ade]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-09-11T12:02:39Z" finished-at="2018-09-11T12:02:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.uiFramework.TH.Nbf.testScripts.Test1.testLogin2()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testLogin2()[pri:0, instance:com.uiFramework.TH.Nbf.testScripts.Test1@5ae63ade]" name="testLogin2" duration-ms="1" started-at="2018-09-11T12:02:39Z" finished-at="2018-09-11T12:02:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin2 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.uiFramework.TH.Nbf.testScripts.Test1@5ae63ade]" name="afterMethod" is-config="true" duration-ms="35" started-at="2018-09-11T12:02:39Z" finished-at="2018-09-11T12:02:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin2 status=SUCCESS method=Test1.testLogin2()[pri:0, instance:com.uiFramework.TH.Nbf.testScripts.Test1@5ae63ade] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="testLogin3()[pri:0, instance:com.uiFramework.TH.Nbf.testScripts.Test1@5ae63ade]" name="testLogin3" duration-ms="2" started-at="2018-09-11T12:02:39Z" finished-at="2018-09-11T12:02:39Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.uiFramework.TH.Nbf.helper.assertion.AssertionHelper.markFail(AssertionHelper.java:28)
at com.uiFramework.TH.Nbf.testScripts.Test1.testLogin3(Test1.java:28)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin3 -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.uiFramework.TH.Nbf.testScripts.Test1@5ae63ade]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-09-11T12:02:39Z" finished-at="2018-09-11T12:02:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.uiFramework.TH.Nbf.testScripts.Test1.testLogin3()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.uiFramework.TH.Nbf.testScripts.Test1@5ae63ade]" name="afterMethod" is-config="true" duration-ms="283" started-at="2018-09-11T12:02:39Z" finished-at="2018-09-11T12:02:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin3 status=FAILURE method=Test1.testLogin3()[pri:0, instance:com.uiFramework.TH.Nbf.testScripts.Test1@5ae63ade] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[captureScreen method called]]>
            </line>
            <line>
              <![CDATA[<a href='C:\Users\THI1806393\eclipse-workspace\TH_NBF\src\main\resources\screenShots\testLogin3_11_09_2018_05_32_39.png'><img src='C:\Users\THI1806393\eclipse-workspace\TH_NBF\src\main\resources\screenShots\testLogin3_11_09_2018_05_32_39.png'height='100' width='100'/></a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.uiFramework.TH.Nbf.testScripts.Test1@5ae63ade]" name="afterTest" is-config="true" duration-ms="569" started-at="2018-09-11T12:02:40Z" finished-at="2018-09-11T12:02:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.uiFramework.TH.Nbf.testScripts.Test1 -->
      <class name="com.uiFramework.TH.Nbf.testScripts.Test2">
        <test-method status="PASS" signature="testLogin()[pri:0, instance:com.uiFramework.TH.Nbf.testScripts.Test2@610694f1]" name="testLogin" duration-ms="1" started-at="2018-09-11T12:02:40Z" finished-at="2018-09-11T12:02:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.uiFramework.TH.Nbf.testScripts.Test2@610694f1]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-09-11T12:02:40Z" finished-at="2018-09-11T12:02:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.uiFramework.TH.Nbf.testScripts.Test2.testLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.uiFramework.TH.Nbf.testScripts.Test2@610694f1]" name="afterMethod" is-config="true" duration-ms="26" started-at="2018-09-11T12:02:40Z" finished-at="2018-09-11T12:02:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin status=SUCCESS method=Test2.testLogin()[pri:0, instance:com.uiFramework.TH.Nbf.testScripts.Test2@610694f1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.uiFramework.TH.Nbf.testScripts.Test2@610694f1]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-09-11T12:02:40Z" finished-at="2018-09-11T12:02:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.uiFramework.TH.Nbf.testScripts.Test2.testLogin1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="testLogin1()[pri:0, instance:com.uiFramework.TH.Nbf.testScripts.Test2@610694f1]" name="testLogin1" duration-ms="1" started-at="2018-09-11T12:02:40Z" finished-at="2018-09-11T12:02:40Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.uiFramework.TH.Nbf.helper.assertion.AssertionHelper.markFail(AssertionHelper.java:28)
at com.uiFramework.TH.Nbf.testScripts.Test2.testLogin1(Test2.java:18)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin1 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.uiFramework.TH.Nbf.testScripts.Test2@610694f1]" name="afterMethod" is-config="true" duration-ms="28" started-at="2018-09-11T12:02:40Z" finished-at="2018-09-11T12:02:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin1 status=FAILURE method=Test2.testLogin1()[pri:0, instance:com.uiFramework.TH.Nbf.testScripts.Test2@610694f1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.uiFramework.TH.Nbf.testScripts.Test2@610694f1]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-09-11T12:02:40Z" finished-at="2018-09-11T12:02:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.uiFramework.TH.Nbf.testScripts.Test2.testLogin2()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testLogin2()[pri:0, instance:com.uiFramework.TH.Nbf.testScripts.Test2@610694f1]" name="testLogin2" duration-ms="1" started-at="2018-09-11T12:02:40Z" finished-at="2018-09-11T12:02:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin2 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.uiFramework.TH.Nbf.testScripts.Test2@610694f1]" name="afterMethod" is-config="true" duration-ms="58" started-at="2018-09-11T12:02:40Z" finished-at="2018-09-11T12:02:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin2 status=SUCCESS method=Test2.testLogin2()[pri:0, instance:com.uiFramework.TH.Nbf.testScripts.Test2@610694f1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.uiFramework.TH.Nbf.testScripts.Test2@610694f1]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-09-11T12:02:40Z" finished-at="2018-09-11T12:02:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.uiFramework.TH.Nbf.testScripts.Test2.testLogin3()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="testLogin3()[pri:0, instance:com.uiFramework.TH.Nbf.testScripts.Test2@610694f1]" name="testLogin3" duration-ms="2" started-at="2018-09-11T12:02:40Z" finished-at="2018-09-11T12:02:40Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.uiFramework.TH.Nbf.helper.assertion.AssertionHelper.markFail(AssertionHelper.java:28)
at com.uiFramework.TH.Nbf.testScripts.Test2.testLogin3(Test2.java:28)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin3 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.uiFramework.TH.Nbf.testScripts.Test2@610694f1]" name="afterMethod" is-config="true" duration-ms="28" started-at="2018-09-11T12:02:40Z" finished-at="2018-09-11T12:02:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin3 status=FAILURE method=Test2.testLogin3()[pri:0, instance:com.uiFramework.TH.Nbf.testScripts.Test2@610694f1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.uiFramework.TH.Nbf.testScripts.Test2 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
